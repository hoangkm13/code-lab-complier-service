server:
  port: 8082
  error:
    include-message: always
    include-stacktrace: never

compiler:
  max-test-cases: ${MAX_TEST_CASES:100000} # maximum number of test cases a request should handle
  compilation-container:
    volume: ${COMPILATION_CONTAINER_VOLUME:} # only when running the app inside a container
  execution:
    max-cpus: ${MAX_EXECUTION_CPUS:0}
  features:
    push-notification:
      enabled: ${ENABLE_PUSH_NOTIFICATION:false}
  docker:
    image:
      delete: ${DELETE_DOCKER_IMAGE:true} # delete the docker image at the end of the execution of the container, by default it is set to true.
  execution-memory:
    max: ${EXECUTION_MEMORY_MAX:100000}
    min: ${EXECUTION_MEMORY_MIN:0}
  execution-time:
    max: ${EXECUTION_TIME_MAX:15}
    min: ${EXECUTION_TIME_MIN:0}
  max-requests: ${MAX_REQUESTS:100000}

spring:
  banner:
    location: classpath:bannername.txt
  application:
    name: remote-code-compiler
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration

  # Thymeleaf template engine
  thymeleaf:
    cache: true
    mode: TEXT
    prefix: classpath:/templates/
    suffix: .sh

management:
  endpoint:
    health:
      show-details: always
    env:
      keys-to-sanitize: password, key, secret, token
    service-registry:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus, beans, logfile
      base-path: /

info:
  app:
    name: "Remote Code Compiler"
    description: "Remote Code Compiler Supports 11 languages: Java, Kotlin, Scala, C, C++, C#, Golang, Python, Ruby, Rust and Haskell"
    version: "1.0.0"

---
# kafka profile
spring:
  config:
    activate:
      on-profile: kafka
  kafka:
    throttling-duration: ${KAFKA_THROTTLING_DURATION:10000} # in millis, used when a throttling occurred
    topics:
      input-topic: ${KAFKA_INPUT_TOPIC:kafka.topic.input}
      output-topic: ${KAFKA_OUTPUT_TOPIC:kafka.topic.output}
    streams:
      application-id: ${KAFKA_CONSUMER_GROUP_ID:compilerID}
      security:
        protocol: ${KAFKA_SECURITY_PROTOCOL:SASL_SSL}
      properties:
        sasl:
          mechanism: PLAIN
          jaas:
            config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${CLUSTER_API_KEY}" password="${CLUSTER_API_SECRET}";
    bootstrap-servers: ${KAFKA_HOSTS:localhost:9092}
    jaas:
      enabled: true

---
# rabbitmq profile
spring:
  config:
    activate:
      on-profile: rabbitmq
  autoconfigure:
    include: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
  rabbitmq:
    throttling-duration: ${RABBIT_THROTTLING_DURATION:10000} # in millis, used when a throttling occurred
    queues:
      input: ${RABBIT_QUEUE_INPUT:rabbit.queue.input}
      output: ${RABBIT_QUEUE_OUTPUT:rabbit.queue.output}
    password: ${RABBIT_PASSWORD:guest}
    username: ${RABBIT_USERNAME:guest}
    addresses: ${RABBIT_HOSTS:localhost:5672}

---
# logstash profile (for logging)
spring:
  config:
    activate:
      on-profile: logstash
  logstash:
    server: ${LOGSTASH_SERVER_HOST:http://localhost}
    port: ${LOGSTASH_SERVER_PORT:5044}

---
# rollingFile profile (for logging)
spring:
  config:
    activate:
      on-profile: rollingFile
logging:
  file:
    path: logs
    name: ${logging.file.path}/compiler.log