# Default values for compiler.

replicaCount: 1

image:
  repository: compiler
  pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  port: 8082

# Init container
initContainerImage:
  repository: environment
  pullPolicy: Never
  tag: "latest"

health:
  liveness: /health/kafkaStreams # check if Kafka streams is broken
  readiness: /health/containerization # check if the containerization system used by the compiler is broken

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

compiler:
  path: "/compiler" # !! Note: Should be the same as the WORKDIR specified in the dockerfile
  deleteDockerImage: true
  maxExecutionMemory: 1000
  minExecutionMemory: 100
  maxExecutionTime: 15
  minExecutionTime: 1
  maxRequests: 40
  enablePushNotification: true
  pull_images_before_startup: false
  cpus: 0.2

kafka:
  enabled: false

rabbitmq:
  enabled: false

service:
  type: NodePort
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: compiler
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: compiler-tls
  #    hosts:
  #      - compiler

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
